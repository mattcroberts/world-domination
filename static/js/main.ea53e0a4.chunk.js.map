{"version":3,"sources":["actions/game.js","reducers/game/index.js","actions/nation.js","reducers/player/index.js","reducers/nation/index.js","reducers/index.js","components/Nation/index.js","components/Gameboard/index.js","components/GameboardWrapper/index.js","containers/Gameboard/index.js","components/Controls/index.js","containers/Controls/index.js","components/InfoPanel/index.js","containers/InfoPanel/index.js","components/Dialog/index.js","App.js","registerServiceWorker.js","index.js","store.js"],"names":["ACTIONS","endTurn","player","type","defaultState","currentPlayerId","playerCount","attack","aggressorPlayerId","nation","defendingNation","nationClick","_ref","id","setNationRuler","playerId","nationId","0","name","color","1","getPlayerById","state","players","getCurrentPlayer","game","map","reduce","acc","i","Object","objectSpread","defineProperty","selected","borders","borderNations","troops","getSelectedNation","entries","nations","find","_ref3","slicedToArray","getNationById","calculateAttackTargets","filter","hasPlayer","resetSelected","_ref5","combineReducers","arguments","length","undefined","assign","action","_merge","_ref7","defendingTroops","skirmishes","_ref8","aggressorTroops","defenderTroops","Math","max","console","log","result","_ref9","calculateAttackResult","Nation","scaleX","scaleY","isSelected","_ref$fillColor","fillColor","onNationClick","react_default","a","createElement","ReactKonva","data","fill","stroke","strokeWidth","onClick","Gameboard","outerHeight","outerWidth","scale","className","width","height","values","components_Nation","key","toString","GameboardWrapper","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onResize","bind","assertThisInitialized","offsetWidth","element","node","ReactDOM","findDOMNode","setState","offsetHeight","_this2","_this$props","nationsWithMap","otherProps","objectWithoutProperties","component","components_Gameboard","ref","window","addEventListener","removeEventListener","React","Component","connect","ownProps","_ref4","dispatch","bindActionCreators","_ref2","path","components_GameboardWrapper_GameboardWrapper","components_Controls","onEndTurnClick","onChooseStartNationClick","onAttackClick","controlEnabled","data-qaId","disabled","selectedNation","n","nationCanBeAttacked","attackTargets","components_InfoPanel","currentPlayer","ruler","concat","join","esm_extends","components_Dialog","visible","classnames","show","App","Fragment","containers_Controls","containers_Gameboard","containers_InfoPanel","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","render","es","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","src_App_0","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ea53e0a4.chunk.js","sourcesContent":["export const ACTIONS = {\n    END_TURN: 'GAME/END_TURN'\n};\n\nexport const endTurn = player => {\n    return {\n        type: ACTIONS.END_TURN,\n        player\n    };\n};\n","import { ACTIONS } from '../../actions/game';\n\nconst defaultState = {\n    currentPlayerId: 0,\n    playerCount: 2\n};\n\nconst getNextPlayerId = (currentPlayerId, playerCount) =>\n    currentPlayerId + 1 < playerCount ? currentPlayerId + 1 : 0;\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n    case ACTIONS.END_TURN:\n        return Object.assign({}, state, {\n            currentPlayerId: getNextPlayerId(\n                state.currentPlayerId,\n                state.playerCount\n            )\n        });\n    default:\n        return state;\n    }\n};\n","export const ACTIONS = {\n    ATTACK: 'NATION/ATTACK',\n    CLICK: 'NATION/CLICK',\n    SET_RULER: 'NATION/SET_RULER'\n};\n\nexport const attack = (aggressorPlayerId, nation) => {\n    return {\n        type: ACTIONS.ATTACK,\n        aggressorPlayerId,\n        defendingNation: nation\n    };\n};\n\nexport const nationClick = ({ id }) => {\n    return {\n        type: ACTIONS.CLICK,\n        nation: {\n            id\n        }\n    };\n};\n\nexport const setNationRuler = (playerId, nationId) => {\n    return {\n        type: ACTIONS.SET_RULER,\n        playerId,\n        nation: {\n            id: nationId\n        }\n    };\n};\n","const defaultState = {\n    0: {\n        id: 0,\n        name: 'Matt',\n        color: 'red'\n    },\n    1: {\n        id: 1,\n        name: 'Other Player',\n        color: 'blue'\n    }\n};\nexport const getPlayerById = (state, playerId) => state.players[playerId];\nexport const getCurrentPlayer = state =>\n    state.players[state.game.currentPlayerId];\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n    default:\n        return state;\n    }\n};\n","import _merge from 'lodash.merge';\nimport { ACTIONS } from '../../actions/nation';\nimport map from '../../maps/europe.json';\nimport { getCurrentPlayer } from '../player';\n\nconst ATTACK_COEFFICIENT = 2;\nconst MIN_RESERVE_TROOPS = 1;\n\nconst defaultState = map.reduce((acc, nation, i) => {\n    return {\n        ...acc,\n        [i]: {\n            id: i,\n            selected: false,\n            player: null,\n            borders: nation.borderNations,\n            name: nation.name,\n            troops: 0\n        }\n    };\n}, {});\n\nexport const getSelectedNation = state => {\n    const [nationId] =\n        Object.entries(state.nations).find(([, nation]) => nation.selected) ||\n        [];\n    return state.nations[nationId] ? state.nations[nationId] : null;\n};\n\nexport const getNationById = (state, nationId) =>\n    state.nations[nationId] || null;\n\nconst hasPlayer = (state, nationId) => {\n    const borderNation = getNationById(state, nationId);\n\n    return borderNation.player !== null;\n};\n\nexport const calculateAttackTargets = (state, nationId) => {\n    const nation = getNationById(state, nationId);\n\n    if (nation.troops < 2) {\n        return [];\n    }\n\n    return getNationById(state, nationId).borders.filter(nation =>\n        hasPlayer(state, nation)\n    );\n};\n\nconst resetSelected = state => {\n    return Object.entries(state)\n        .map(([, nation]) => ({ ...nation, selected: false }))\n        .reduce((acc, nation) => ({ ...acc, [nation.id]: nation }), {});\n};\n\n/**\n * Nation can be attacked if the nations that border it are occupied by the current player and have > 1 troops\n *\n * @param {Object} state\n * @param {Object} nation\n *\n * @return {boolean}\n */\nexport const nationCanBeAttacked = (state, nation) => {\n    const currentPlayerId = getCurrentPlayer(state).id;\n    return (\n        nation !== null &&\n        nation.player !== currentPlayerId &&\n        nation.borders.filter(nationId => {\n            const n = getNationById(state, nationId);\n            return n.player === currentPlayerId && n.troops > 1;\n        }).length > 0\n    );\n};\n\nconst calculateAttackResult = (\n    state,\n    { aggressorPlayerId, defendingNation }\n) => {\n    const defendingTroops = defendingNation.troops;\n    const skirmishes = defendingNation.borders\n        .map(nationId => state[nationId])\n        .filter(nation => aggressorPlayerId === nation.player)\n        .map(({ id, troops: aggressorTroops }) => {\n            return {\n                id,\n                defenderTroops: Math.max(\n                    defendingTroops - aggressorTroops / ATTACK_COEFFICIENT,\n                    0\n                ),\n                aggressorTroops: Math.max(\n                    MIN_RESERVE_TROOPS,\n                    aggressorTroops - defendingTroops * ATTACK_COEFFICIENT\n                )\n            };\n        });\n    console.log(skirmishes);\n    const result = Object.assign(\n        {\n            [defendingNation.id]: {\n                troops: skirmishes[0].defenderTroops,\n                player:\n                    skirmishes[0].defenderTroops > 0\n                        ? defendingNation.player\n                        : aggressorPlayerId\n            }\n        },\n        skirmishes\n            .map(({ id, aggressorTroops }) => ({\n                [id]: { troops: aggressorTroops }\n            }))\n            .reduce((acc, nation) => {\n                return {\n                    ...acc,\n                    ...nation\n                };\n            })\n    );\n    console.log(result);\n    return result;\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n    case ACTIONS.SET_RULER:\n        return Object.assign({}, state, {\n            [action.nation.id]: {\n                ...state[action.nation.id],\n                player: action.playerId,\n                selected: false,\n                troops: 100\n            }\n        });\n    case ACTIONS.CLICK:\n        return Object.assign({}, resetSelected(state), {\n            [action.nation.id]: {\n                ...state[action.nation.id],\n                selected: !state[action.nation.id].selected\n            }\n        });\n    case ACTIONS.ATTACK:\n        return _merge(\n            {},\n            resetSelected(state),\n            calculateAttackResult(state, action)\n        );\n    default:\n        return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport gameReducer from './game';\nimport nationReducer from './nation';\nimport playerReducer from './player';\n\nexport default combineReducers({\n    game: gameReducer,\n    nations: nationReducer,\n    players: playerReducer\n});\n","import React from 'react';\nimport { Path } from 'react-konva';\n\nconst Nation = ({\n    map,\n    scaleX,\n    scaleY,\n    selected: isSelected,\n    fillColor = 'white',\n    onNationClick\n}) => {\n    return (\n        <Path\n            data={map}\n            fill={fillColor}\n            stroke=\"black\"\n            strokeWidth={isSelected ? 0.5 : 0.1}\n            scaleX={scaleX}\n            scaleY={scaleY}\n            onClick={onNationClick}\n        />\n    );\n};\n\nexport default Nation;\n","import React from 'react';\nimport { Layer, Stage } from 'react-konva';\n\nimport Nation from '../Nation';\n\nimport './Gameboard.css';\n\nconst Gameboard = ({ nations, nationClick, outerHeight, outerWidth }) => {\n    const scale = outerWidth / 237.823; // What is this magic number?!\n    return (\n        <Stage className=\"Gameboard\" width={outerWidth} height={outerHeight}>\n            <Layer>\n                {Object.values(nations).map((nation, i) => {\n                    return (\n                        <Nation\n                            key={i.toString()}\n                            onNationClick={() => nationClick({ id: i })}\n                            {...nation}\n                            scaleX={scale}\n                            scaleY={scale}\n                        />\n                    );\n                })}\n            </Layer>\n        </Stage>\n    );\n};\n\nexport default Gameboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './GameboardWrapper.css';\nimport Gameboard from '../Gameboard';\n\nexport default class GameboardWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onResize = this.onResize.bind(this);\n        this.state = {\n            offsetWidth: null\n        };\n    }\n\n    onResize() {\n        if (this.element) {\n            const node = ReactDOM.findDOMNode(this.element);\n            this.setState({\n                offsetWidth: node.offsetWidth,\n                offsetHeight: node.offsetHeight\n            });\n        }\n    }\n\n    render() {\n        const { nationsWithMap, ...otherProps } = this.props;\n        const component = this.state.offsetWidth ? (\n            <Gameboard\n                outerWidth={this.state.offsetWidth}\n                outerHeight={this.state.offsetHeight}\n                nations={nationsWithMap}\n                {...otherProps}\n            />\n        ) : null;\n        return (\n            <div\n                className=\"GameboardWrapper\"\n                ref={element => (this.element = element)}\n            >\n                {component}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.onResize();\n    }\n\n    componentWillMount() {\n        window.addEventListener('resize', this.onResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport GameboardWrapper from '../../components/GameboardWrapper';\n\nimport map from '../../maps/europe.json';\nimport { nationClick } from '../../actions/nation';\nimport { getPlayerById } from '../../reducers/player';\n\nexport const GameboardContainer = ({ nations, ...otherProps }) => {\n    const nationsWithMap = Object.entries(nations).reduce(\n        (acc, [id, nation]) => {\n            return Object.assign(acc, {\n                [id]: Object.assign(nation, {\n                    map: map[id].path\n                })\n            });\n        },\n        {}\n    );\n    return <GameboardWrapper nations={nationsWithMap} {...otherProps} />;\n};\n\nexport const mapStateToProps = (state, ownProps) => {\n    return {\n        ...ownProps,\n        ...{\n            nations: Object.entries(state.nations)\n                .map(([, nation]) => {\n                    const player = getPlayerById(state, nation.player);\n                    return {\n                        ...nation,\n                        fillColor: player ? player.color : undefined\n                    };\n                })\n                .reduce(\n                    (acc, nation) => ({\n                        ...acc,\n                        [nation.id]: nation\n                    }),\n                    {}\n                )\n        }\n    };\n};\n\nexport default connect(mapStateToProps, dispatch => {\n    return bindActionCreators({ nationClick }, dispatch);\n})(GameboardContainer);\n","import React from 'react';\n\nimport './Controls.css';\n\nexport default ({\n    currentPlayerId,\n    onEndTurnClick,\n    onChooseStartNationClick,\n    onAttackClick,\n    controlEnabled\n}) => (\n    <div className=\"Controls\">\n        <span>Current Player: {currentPlayerId}</span>\n        <button onClick={onEndTurnClick}>End turn</button>\n        <button onClick={onChooseStartNationClick}>Choose Home Nation</button>\n\n        <button data-qaId=\"attack\" disabled={!controlEnabled.attack} onClick={onAttackClick}>\n            Attack\n        </button>\n    </div>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n    calculateAttackTargets,\n    getSelectedNation,\n    nationCanBeAttacked\n} from '../../reducers/nation';\nimport { attack, setNationRuler } from '../../actions/nation';\nimport { endTurn } from '../../actions/game';\n\nimport Controls from '../../components/Controls';\n\nconst ControlsContainer = ({ attack, endTurn, setNationRuler, ...props }) => (\n    <Controls\n        onEndTurnClick={() => endTurn(props.currentPlayerId)}\n        onChooseStartNationClick={() => {\n            setNationRuler(props.currentPlayerId, props.selectedNation.id);\n            endTurn(props.currentPlayerId);\n        }}\n        onAttackClick={() => {\n            attack(props.currentPlayerId, props.selectedNation);\n            endTurn(props.currentPlayerId);\n        }}\n        {...props}\n    />\n);\n\nexport const mapStateToProps = state => {\n    const selectedNation = getSelectedNation(state);\n    return {\n        currentPlayerId: state.game.currentPlayerId,\n        selectedNation,\n        controlEnabled: {\n            attack: nationCanBeAttacked(state, selectedNation)\n        },\n        attackTargets: selectedNation\n            ? calculateAttackTargets(state, selectedNation.id)\n            : []\n    };\n};\n\nexport default connect(mapStateToProps, dispatch => {\n    return bindActionCreators(\n        {\n            attack,\n            endTurn,\n            setNationRuler\n        },\n        dispatch\n    );\n})(ControlsContainer);\n","import React from 'react';\nimport './InfoPanel.css';\n\nexport default ({ currentPlayer, ruler, attackTargets, selectedNation }) => (\n    <div className=\"InfoPanel\">\n        <dl>\n            <dt>Current Player</dt>\n            <dd data-qaId=\"playerName\">{currentPlayer.name}</dd>\n            <dt>Ruler</dt>\n            <dd>{ruler ? ruler.name : 'Neutral'}</dd>\n\n            <dt>Name</dt>\n            <dd>\n                {selectedNation\n                    ? `${selectedNation.name} (${selectedNation.id})`\n                    : 'N/A'}\n            </dd>\n            <dt>Borders</dt>\n            <dd>{selectedNation ? selectedNation.borders.join(',') : ''}</dd>\n\n            <dt>Troops</dt>\n            <dd>{selectedNation ? selectedNation.troops : ''}</dd>\n\n            <dt>Targets (Attack)</dt>\n            <dd>{attackTargets.join(',')}</dd>\n        </dl>\n    </div>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport InfoPanel from '../../components/InfoPanel';\nimport {\n    calculateAttackTargets,\n    getSelectedNation\n} from '../../reducers/nation';\nimport { getCurrentPlayer, getPlayerById } from '../../reducers/player';\n\nconst InfoPanelContainer = ({ ...props }) => <InfoPanel {...props} />;\n\nexport const mapStateToProps = state => {\n    const selectedNation = getSelectedNation(state);\n\n    return {\n        currentPlayer: getCurrentPlayer(state),\n        ruler: selectedNation\n            ? getPlayerById(state, selectedNation.player)\n            : null,\n        attackTargets: selectedNation\n            ? calculateAttackTargets(state, selectedNation.id)\n            : [],\n        selectedNation\n    };\n};\nexport default connect(mapStateToProps, dispatch => {\n    return bindActionCreators({}, dispatch);\n})(InfoPanelContainer);\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Dialog.css';\n\nexport default ({ visible }) => (\n    <form className={classnames('Dialog', { show: visible })} />\n);\n","import React from 'react';\n\nimport './App.css';\n\nimport GameboardContainer from './containers/Gameboard';\nimport ControlsContainer from './containers/Controls';\nimport InfoPanelContainer from './containers/InfoPanel';\nimport Dialog from './components/Dialog';\n\nconst App = () => (\n    <React.Fragment>\n        <div className=\"DialogContainer\">\n            <Dialog />\n        </div>\n        <ControlsContainer />\n        <div className=\"App\">\n            <GameboardContainer />\n            <InfoPanelContainer />\n        </div>\n    </React.Fragment>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nexport default () =>\n    createStore(\n        reducers,\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n"],"sourceRoot":""}